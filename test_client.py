"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∫–ª–∏–µ–Ω—Ç –¥–ª—è WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
"""
import asyncio
import websockets
import json
from datetime import datetime

async def test_drawing_sync():
    """–¢–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ä–∏—Å–æ–≤–∞–Ω–∏—è"""
    uri = "wss://app-q.onrender.com/ws/default-room"
    
    try:
        async with websockets.connect(uri) as websocket:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å–µ—Ä–≤–µ—Ä—É")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É —Ä–∏—Å–æ–≤–∞–Ω–∏—è
            drawing_command = {
                "type": "drawing",
                "x": 100,
                "y": 200,
                "action": "draw",
                "color": "#FF0000",
                "size": 5,
                "tool": "brush"
            }
            
            await websocket.send(json.dumps(drawing_command))
            print("üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∏—Å–æ–≤–∞–Ω–∏—è")
            
            # –°–ª—É—à–∞–µ–º –æ—Ç–≤–µ—Ç—ã
            try:
                response = await asyncio.wait_for(websocket.recv(), timeout=5.0)
                data = json.loads(response)
                print(f"üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {data}")
            except asyncio.TimeoutError:
                print("‚è∞ –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_api():
    """–¢–µ—Å—Ç REST API"""
    import requests
    
    base_url = "https://app-q.onrender.com"
    
    try:
        # –¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
        response = requests.get(f"{base_url}/api/status")
        if response.status_code == 200:
            print("‚úÖ API —Å—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞: {response.json()}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        # –¢–µ—Å—Ç –∫–æ–º–Ω–∞—Ç
        response = requests.get(f"{base_url}/api/rooms/")
        if response.status_code == 200:
            print("‚úÖ API –∫–æ–º–Ω–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üè† –ö–æ–º–Ω–∞—Ç—ã: {response.json()}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API –∫–æ–º–Ω–∞—Ç: {response.status_code}")
            
        # –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        response = requests.get(f"{base_url}/api/updates/check/android?current_version=1.0.0")
        if response.status_code == 200:
            print("‚úÖ API –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.json()}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {response.status_code}")
            
    except requests.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: {e}")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Drawing Sync Server\n")
    
    print("1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ REST API:")
    test_api()
    
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WebSocket:")
    asyncio.run(test_drawing_sync())
