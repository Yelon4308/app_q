import asyncio
import websockets
import json

async def client_sender():
    """–ö–ª—ñ—î–Ω—Ç —è–∫–∏–π –Ω–∞–¥—Å–∏–ª–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
    try:
        uri = "wss://app-q.onrender.com/ws/test_room"
        async with websockets.connect(uri) as websocket:
            print("üì§ Sender –ø—ñ–¥–∫–ª—é—á–∏–≤—Å—è!")
            
            await asyncio.sleep(2)  # –î–∞—î–º–æ —á–∞—Å –¥—Ä—É–≥–æ–º—É –∫–ª—ñ—î–Ω—Ç—É –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è
            
            test_message = {
                "type": "drawing",
                "x": 100,
                "y": 200,
                "action": "draw",
                "color": "#FF0000",
                "size": 5,
                "tool": "brush"
            }
            
            print(f"üì§ –ù–∞–¥—Å–∏–ª–∞—î–º–æ: {json.dumps(test_message)}")
            await websocket.send(json.dumps(test_message))
            
            await asyncio.sleep(5)  # –¢—Ä–∏–º–∞—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è
            
    except Exception as e:
        print(f"‚ùå Sender –ø–æ–º–∏–ª–∫–∞: {e}")

async def client_receiver():
    """–ö–ª—ñ—î–Ω—Ç —è–∫–∏–π —Å–ª—É—Ö–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
    try:
        uri = "wss://app-q.onrender.com/ws/test_room"
        async with websockets.connect(uri) as websocket:
            print("üì• Receiver –ø—ñ–¥–∫–ª—é—á–∏–≤—Å—è!")
            
            # –°–ª—É—Ö–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            while True:
                try:
                    message = await asyncio.wait_for(websocket.recv(), timeout=10)
                    print(f"üì• Receiver –æ—Ç—Ä–∏–º–∞–≤: {message}")
                except asyncio.TimeoutError:
                    print("‚è∞ Receiver timeout")
                    break
                    
    except Exception as e:
        print(f"‚ùå Receiver –ø–æ–º–∏–ª–∫–∞: {e}")

async def test_two_clients():
    """–¢–µ—Å—Ç –∑ –¥–≤–æ–º–∞ –∫–ª—ñ—î–Ω—Ç–∞–º–∏"""
    print("üîå –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç –∑ –¥–≤–æ–º–∞ –∫–ª—ñ—î–Ω—Ç–∞–º–∏...")
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –æ–±–æ—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤ –æ–¥–Ω–æ—á–∞—Å–Ω–æ
    await asyncio.gather(
        client_receiver(),
        client_sender()
    )

if __name__ == "__main__":
    asyncio.run(test_two_clients())
