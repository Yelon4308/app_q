import asyncio
import websockets
import json

async def test_old_format():
    try:
        print("üîå –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–∞—Ä–∏–π —Ñ–æ—Ä–º–∞—Ç...")
        uri = "wss://app-q.onrender.com/ws/test_room"
        
        async with websockets.connect(uri) as websocket:
            print("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ!")
            
            # –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–∞—Ä–∏–π —Ñ–æ—Ä–º–∞—Ç
            old_message = {
                "type": "drawing",
                "x": 100,
                "y": 200,
                "action": "draw",
                "color": "#FF0000",
                "size": 5,
                "tool": "brush"
            }
            
            print(f"üì§ –ù–∞–¥—Å–∏–ª–∞—î–º–æ —Å—Ç–∞—Ä–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:")
            print(f"   {json.dumps(old_message, indent=2)}")
            
            await websocket.send(json.dumps(old_message))
            
            # –ß–µ–∫–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
            try:
                response = await asyncio.wait_for(websocket.recv(), timeout=5.0)
                print(f"üì• –û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å:")
                print(f"   {response}")
                
            except asyncio.TimeoutError:
                print("‚è∞ Timeout - –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–∞")
                
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_old_format())
